requires.push([1, "combat", [0], [0], 'OR']);
requires.push([2, "combat", [1], [3], 'OR']);
requires.push([3, "combat", [1], [3], 'OR']);
requires.push([4, "combat", [2, 3], [3, 3], 'OR']);
requires.push([5, "combat", [4, 22, 23], [3, 3, 3], 'OR']);
requires.push([6, "combat", [5], [5], 'OR']);
requires.push([7, "combat", [6], [3], 'OR']);
requires.push([8, "combat", [6], [3], 'OR']);
requires.push([9, "combat", [7, 8], [3, 3], 'OR']);
requires.push([10, "combat", [9, 20, 21], [3, 3, 3], 'OR']);
requires.push([11, "combat", [10], [5], 'OR']);
requires.push([12, "combat", [11], [3], 'OR']);
requires.push([13, "combat", [11], [3], 'OR']);
requires.push([14, "combat", [12, 13], [3, 3], 'OR']);
requires.push([15, "combat", [14, 16, 18], [3, 5, 3], 'OR']);
requires.push([16, "combat", [14, 15, 19], [3, 5, 3], 'OR']);
requires.push([17, "combat", [15, 16], [5, 5], 'OR']);
requires.push([18, "combat", [25, 26], [3, 3], 'OR']);
requires.push([19, "combat", [34, 35], [3, 3], 'OR']);
requires.push([20, "combat", [28, 29], [3, 3], 'OR']);
requires.push([21, "combat", [37, 38], [3, 3], 'OR']);
requires.push([22, "combat", [31, 32], [3, 3], 'OR']);
requires.push([23, "combat", [40, 41], [3, 3], 'OR']);
requires.push([24, "combat", [10], [5], 'OR']);
requires.push([25, "combat", [24], [3], 'OR']);
requires.push([26, "combat", [24], [3], 'OR']);
requires.push([27, "combat", [5], [5], 'OR']);
requires.push([28, "combat", [27], [3], 'OR']);
requires.push([29, "combat", [27], [3], 'OR']);
requires.push([30, "combat", [0], [0], 'OR']);
requires.push([31, "combat", [30], [3], 'OR']);
requires.push([32, "combat", [30], [3], 'OR']);
requires.push([33, "combat", [10], [5], 'OR']);
requires.push([34, "combat", [33], [3], 'OR']);
requires.push([35, "combat", [33], [3], 'OR']);
requires.push([36, "combat", [5], [5], 'OR']);
requires.push([37, "combat", [36], [3], 'OR']);
requires.push([38, "combat", [36], [3], 'OR']);
requires.push([39, "combat", [0], [0], 'OR']);
requires.push([40, "combat", [39], [3], 'OR']);
requires.push([41, "combat", [39], [3], 'OR']);
requires.push([42, "combat", [0], [0], 'OR']);
requires.push([43, "combat", [42], [3], 'OR']);
requires.push([44, "combat", [42], [3], 'OR']);
requires.push([45, "combat", [43, 44], [3, 3], 'OR']);
requires.push([46, "combat", [45, 63, 64], [3, 3, 3], 'OR']);
requires.push([47, "combat", [46], [5], 'OR']);
requires.push([48, "combat", [47], [3], 'OR']);
requires.push([49, "combat", [47], [3], 'OR']);
requires.push([50, "combat", [48, 49], [3, 3], 'OR']);
requires.push([51, "combat", [50, 61, 62], [3, 3, 3], 'OR']);
requires.push([52, "combat", [51], [5], 'OR']);
requires.push([53, "combat", [52], [3], 'OR']);
requires.push([54, "combat", [52], [3], 'OR']);
requires.push([55, "combat", [53, 54], [3, 3], 'OR']);
requires.push([56, "combat", [55, 57, 59], [3, 5, 3], 'OR']);
requires.push([57, "combat", [55, 56, 60], [3, 5, 3], 'OR']);
requires.push([58, "combat", [57, 56], [5, 5], 'OR']);
requires.push([59, "combat", [66, 67], [3, 3], 'OR']);
requires.push([60, "combat", [75, 76], [3, 3], 'OR']);
requires.push([61, "combat", [69, 70], [3, 3], 'OR']);
requires.push([62, "combat", [78, 79], [3, 3], 'OR']);
requires.push([63, "combat", [72, 73], [3, 3], 'OR']);
requires.push([64, "combat", [81, 82], [3, 3], 'OR']);
requires.push([65, "combat", [51], [5], 'OR']);
requires.push([66, "combat", [65], [3], 'OR']);
requires.push([67, "combat", [65], [3], 'OR']);
requires.push([68, "combat", [46], [5], 'OR']);
requires.push([69, "combat", [68], [3], 'OR']);
requires.push([70, "combat", [68], [3], 'OR']);
requires.push([71, "combat", [0], [0], 'OR']);
requires.push([72, "combat", [71], [3], 'OR']);
requires.push([73, "combat", [71], [3], 'OR']);
requires.push([74, "combat", [51], [5], 'OR']);
requires.push([75, "combat", [74], [3], 'OR']);
requires.push([76, "combat", [74], [3], 'OR']);
requires.push([77, "combat", [46], [5], 'OR']);
requires.push([78, "combat", [77], [3], 'OR']);
requires.push([79, "combat", [77], [3], 'OR']);
requires.push([80, "combat", [0], [0], 'OR']);
requires.push([81, "combat", [80], [3], 'OR']);
requires.push([82, "combat", [80], [3], 'OR']);
requires.push([83, "combat", [0], [0], 'OR']);
requires.push([84, "combat", [83], [3], 'OR']);
requires.push([85, "combat", [83], [3], 'OR']);
requires.push([86, "combat", [84, 85], [3, 3], 'OR']);
requires.push([87, "combat", [86, 104, 105], [3, 3, 3], 'OR']);
requires.push([88, "combat", [87], [5], 'OR']);
requires.push([89, "combat", [88], [3], 'OR']);
requires.push([90, "combat", [88], [3], 'OR']);
requires.push([91, "combat", [89, 90], [3, 3], 'OR']);
requires.push([92, "combat", [91, 102, 103], [3, 3, 3], 'OR']);
requires.push([93, "combat", [92], [5], 'OR']);
requires.push([94, "combat", [93], [3], 'OR']);
requires.push([95, "combat", [93], [3], 'OR']);
requires.push([96, "combat", [94, 95], [3, 3], 'OR']);
requires.push([97, "combat", [96, 98, 100], [3, 5, 3], 'OR']);
requires.push([98, "combat", [96, 97, 101], [3, 5, 3], 'OR']);
requires.push([99, "combat", [97, 98], [5, 5], 'OR']);
requires.push([100, "combat", [107, 108], [3, 3], 'OR']);
requires.push([101, "combat", [116, 117], [3, 3], 'OR']);
requires.push([102, "combat", [110, 111], [3, 3], 'OR']);
requires.push([103, "combat", [119, 120], [3, 3], 'OR']);
requires.push([104, "combat", [113, 114], [3, 3], 'OR']);
requires.push([105, "combat", [122, 123], [3, 3], 'OR']);
requires.push([106, "combat", [92], [5], 'OR']);
requires.push([107, "combat", [106], [3], 'OR']);
requires.push([108, "combat", [106], [3], 'OR']);
requires.push([109, "combat", [87], [5], 'OR']);
requires.push([110, "combat", [109], [3], 'OR']);
requires.push([111, "combat", [109], [3], 'OR']);
requires.push([112, "combat", [0], [0], 'OR']);
requires.push([113, "combat", [112], [3], 'OR']);
requires.push([114, "combat", [112], [3], 'OR']);
requires.push([115, "combat", [92], [5], 'OR']);
requires.push([116, "combat", [115], [3], 'OR']);
requires.push([117, "combat", [115], [3], 'OR']);
requires.push([118, "combat", [87], [5], 'OR']);
requires.push([119, "combat", [118], [3], 'OR']);
requires.push([120, "combat", [118], [3], 'OR']);
requires.push([121, "combat", [0], [0], 'OR']);
requires.push([122, "combat", [121], [3], 'OR']);
requires.push([123, "combat", [121], [3], 'OR']);
requires.push([1, "construction", [0], [0], 'OR']);
requires.push([2, "construction", [1], [3], 'OR']);
requires.push([3, "construction", [2], [3], 'OR']);
requires.push([4, "construction", [3], [3], 'OR']);
requires.push([5, "construction", [4], [5], 'OR']);
requires.push([6, "construction", [5], [3], 'OR']);
requires.push([7, "construction", [6, 15, 21], [3, 3, 3], 'OR']);
requires.push([8, "construction", [7], [5], 'OR']);
requires.push([9, "construction", [8], [3], 'OR']);
requires.push([10, "construction", [9, 17, 23], [3, 3, 3], 'OR']);
requires.push([11, "construction", [10], [5], 'OR']);
requires.push([12, "construction", [11], [3], 'OR']);
requires.push([13, "construction", [12, 19, 25], [3, 3, 3], 'OR']);
requires.push([14, "construction", [4], [5], 'OR']);
requires.push([15, "construction", [14], [3], 'OR']);
requires.push([16, "construction", [7], [5], 'OR']);
requires.push([17, "construction", [16], [3], 'OR']);
requires.push([18, "construction", [10], [5], 'OR']);
requires.push([19, "construction", [18], [3], 'OR']);
requires.push([20, "construction", [4], [5], 'OR']);
requires.push([21, "construction", [20], [3], 'OR']);
requires.push([22, "construction", [7], [5], 'OR']);
requires.push([23, "construction", [22], [3], 'OR']);
requires.push([24, "construction", [10], [5], 'OR']);
requires.push([25, "construction", [24], [3], 'OR']);
requires.push([26, "construction", [0], [0], 'OR']);
requires.push([27, "construction", [26], [3], 'OR']);
requires.push([28, "construction", [26], [3], 'OR']);
requires.push([29, "construction", [27], [3], 'OR']);
requires.push([30, "construction", [28], [3], 'OR']);
requires.push([31, "construction", [29, 30], [3, 3], 'OR']);
requires.push([32, "construction", [31], [5], 'OR']);
requires.push([33, "construction", [32], [3], 'OR']);
requires.push([34, "construction", [31], [5], 'OR']);
requires.push([35, "construction", [34], [3], 'OR']);
requires.push([36, "construction", [33, 35], [3, 3], 'OR']);
requires.push([37, "construction", [36], [5], 'OR']);
requires.push([38, "construction", [37], [3], 'OR']);
requires.push([39, "construction", [36], [5], 'OR']);
requires.push([40, "construction", [39], [3], 'OR']);
requires.push([41, "construction", [38, 40], [3, 3], 'OR']);
requires.push([42, "construction", [41], [5], 'OR']);
requires.push([43, "construction", [42], [3], 'OR']);
requires.push([44, "construction", [41], [5], 'OR']);
requires.push([45, "construction", [44], [3], 'OR']);
requires.push([46, "construction", [43, 45], [3, 3], 'OR']);
requires.push([47, "construction", [0], [0], 'OR']);
requires.push([48, "construction", [47], [3], 'OR']);
requires.push([49, "construction", [48], [3], 'OR']);
requires.push([50, "construction", [47], [3], 'OR']);
requires.push([51, "construction", [50], [3], 'OR']);
requires.push([52, "construction", [49, 51], [3, 3], 'OR']);
requires.push([53, "construction", [52], [1], 'OR']);
requires.push([54, "construction", [53], [3], 'OR']);
requires.push([55, "construction", [52], [1], 'OR']);
requires.push([56, "construction", [55], [3], 'OR']);
requires.push([57, "construction", [54, 56], [3, 3], 'OR']);
requires.push([58, "construction", [57], [1], 'OR']);
requires.push([59, "construction", [58], [3], 'OR']);
requires.push([60, "construction", [57], [1], 'OR']);
requires.push([61, "construction", [60], [3], 'OR']);
requires.push([62, "construction", [59, 61], [3, 3], 'OR']);
requires.push([63, "construction", [62], [1], 'OR']);
requires.push([64, "construction", [63], [3], 'OR']);
requires.push([65, "construction", [62], [1], 'OR']);
requires.push([66, "construction", [65], [3], 'OR']);
requires.push([67, "construction", [64, 66], [3, 3], 'OR']);
requires.push([68, "construction", [0], [0], 'OR']);
requires.push([69, "construction", [68], [3], 'OR']);
requires.push([70, "construction", [69], [3], 'OR']);
requires.push([71, "construction", [68], [3], 'OR']);
requires.push([72, "construction", [71], [3], 'OR']);
requires.push([73, "construction", [70, 72], [3, 3], 'OR']);
requires.push([74, "construction", [73], [1], 'OR']);
requires.push([75, "construction", [74], [3], 'OR']);
requires.push([76, "construction", [73], [1], 'OR']);
requires.push([77, "construction", [76], [3], 'OR']);
requires.push([78, "construction", [75, 77], [3, 3], 'OR']);
requires.push([79, "construction", [78], [1], 'OR']);
requires.push([80, "construction", [79], [3], 'OR']);
requires.push([81, "construction", [78], [1], 'OR']);
requires.push([82, "construction", [81], [3], 'OR']);
requires.push([83, "construction", [80, 82], [3, 3], 'OR']);
requires.push([84, "construction", [83], [1], 'OR']);
requires.push([85, "construction", [84], [3], 'OR']);
requires.push([86, "construction", [83], [1], 'OR']);
requires.push([87, "construction", [86], [3], 'OR']);
requires.push([88, "construction", [85, 87], [3, 3], 'OR']);
requires.push([1, "resource", [0], [0], 'OR']);
requires.push([2, "resource", [1], [3], 'OR']);
requires.push([3, "resource", [2], [3], 'OR']);
requires.push([4, "resource", [1], [3], 'OR']);
requires.push([5, "resource", [4], [3], 'OR']);
requires.push([6, "resource", [3, 5, 8], [3, 3, 3], 'OR']);
requires.push([7, "resource", [1], [3], 'OR']);
requires.push([8, "resource", [7], [3], 'OR']);
requires.push([9, "resource", [6], [5], 'OR']);
requires.push([10, "resource", [6], [5], 'OR']);
requires.push([11, "resource", [6], [5], 'OR']);
requires.push([12, "resource", [9, 10, 11], [3, 3, 3], 'OR']);
requires.push([13, "resource", [12], [5], 'OR']);
requires.push([14, "resource", [13], [3], 'OR']);
requires.push([15, "resource", [14], [3], 'OR']);
requires.push([16, "resource", [12, 15, 19], [3, 3, 3], 'OR']);
requires.push([17, "resource", [12], [5], 'OR']);
requires.push([18, "resource", [17], [3], 'OR']);
requires.push([19, "resource", [18], [3], 'OR']);
requires.push([20, "resource", [12], [5], 'OR']);
requires.push([21, "resource", [20], [3], 'OR']);
requires.push([22, "resource", [21], [3], 'OR']);
requires.push([23, "resource", [22, 43], [3, 3], 'OR']);
requires.push([24, "resource", [12], [5], 'OR']);
requires.push([25, "resource", [24], [3], 'OR']);
requires.push([26, "resource", [25], [3], 'OR']);
requires.push([27, "resource", [26, 42], [3, 3], 'OR']);
requires.push([28, "resource", [0], [0], 'OR']);
requires.push([29, "resource", [28], [3], 'OR']);
requires.push([30, "resource", [29], [3], 'OR']);
requires.push([31, "resource", [30, 35, 37], [3, 3, 3], 'OR']);
requires.push([32, "resource", [31], [5], 'OR']);
requires.push([33, "resource", [32, 38, 39], [3, 3, 3], 'OR']);
requires.push([34, "resource", [28], [3], 'OR']);
requires.push([35, "resource", [34], [3], 'OR']);
requires.push([36, "resource", [28], [3], 'OR']);
requires.push([37, "resource", [36], [3], 'OR']);
requires.push([38, "resource", [31], [5], 'OR']);
requires.push([39, "resource", [31], [5], 'OR']);
requires.push([40, "resource", [33], [5], 'OR']);
requires.push([41, "resource", [40], [3], 'OR']);
requires.push([42, "resource", [41], [3], 'OR']);
requires.push([43, "resource", [44], [3], 'OR']);
requires.push([44, "resource", [45], [3], 'OR']);
requires.push([45, "resource", [46], [5], 'OR']);
requires.push([46, "resource", [54, 63, 64], [3, 3, 3], 'OR']);
requires.push([47, "resource", [46], [5], 'OR']);
requires.push([48, "resource", [47], [3], 'OR']);
requires.push([49, "resource", [48], [3], 'OR']);
requires.push([50, "resource", [49, 51], [3, 3], 'OR']);
requires.push([51, "resource", [52], [3], 'OR']);
requires.push([52, "resource", [53], [3], 'OR']);
requires.push([53, "resource", [33], [5], 'OR']);
requires.push([54, "resource", [55], [5], 'OR']);
requires.push([55, "resource", [56, 61, 62], [3, 3, 3], 'OR']);
requires.push([56, "resource", [57], [3], 'OR']);
requires.push([57, "resource", [58], [3], 'OR']);
requires.push([58, "resource", [0], [0], 'OR']);
requires.push([59, "resource", [58], [3], 'OR']);
requires.push([60, "resource", [58], [3], 'OR']);
requires.push([61, "resource", [59], [3], 'OR']);
requires.push([62, "resource", [60], [3], 'OR']);
requires.push([63, "resource", [55], [5], 'OR']);
requires.push([64, "resource", [55], [5], 'OR']);